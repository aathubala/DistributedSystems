{"ast":null,"code":"import axios from 'axios';\nimport Swal from 'sweetalert2';\nexport const deleteCustomerAction = userId => async dispatch => {\n  dispatch({\n    type: 'CUSTOMER_DELETE_REQUEST'\n  });\n\n  try {\n    const response = await axios.delete(`http://localhost:8080/api/users/delete/customer/${userId}`);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Customer deleted successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/admin/customers');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'DELETE_CUSTOMER_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Unsuccessful Operation'\n    });\n    dispatch({\n      type: 'DELETE_OPERATION_FAILED',\n      payload: error\n    });\n  }\n}; //update function\n\nexport const updateCustomerName = (updatecustomername, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_NAME_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`http://localhost:8080/api/users/update/customer/name/${userId}`, updatecustomername);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Customer Username updated successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/admin/customers');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'UPDATE_CUSTOMER_NAME_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Customer Name updated unsuccessfully'\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER_NAME_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateCustomerEmail = (updatecustomeremail, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_CUSTOMER_EMAIL_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`http://localhost:8080/api/users/update/customer/email/${userId}`, updatecustomeremail);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Email updated successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/admin/customers');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'UPDATE_CUSTOMER_EMAIL_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Email updated unsuccessfully'\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER_EMAIL_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateCustomerPassword = (updatecustomerpassword, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_CUSTOMER_PASSWORD_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`http://localhost:8080/api/users/update/customer/password/${userId}`, updatecustomerpassword);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Password updated successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/admin/customers');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'UPDATE_CUSTOMER_PASSWORD_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Password updated unsuccessfully'\n    });\n    dispatch({\n      type: 'UPDATE_CUSTOMER_PASSWORD_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateCustomerVerification = (updatecustomerverification, userId, val) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_CUSTOMER_VERIFICATION_REQUEST'\n  });\n\n  if (val === true) {\n    try {\n      const response = await axios.put(`http://localhost:8080/api/users/update/customer/verification/${userId}`, updatecustomerverification);\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Enable Verified user successfully'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/customers');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_CUSTOMER_VERIFICATION_SUCCESS'\n      });\n    } catch (error) {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'error',\n        title: 'Enable Verified user unsuccessfully'\n      });\n      dispatch({\n        type: 'UPDATE_CUSTOMER_VERIFICATION_FAILED',\n        payload: error\n      });\n    }\n  } else {\n    try {\n      const response = await axios.put(`http://localhost:8080/api/users/update/customer/verification/${userId}`, updatecustomerverification);\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Disable Verified user successfully'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/customers');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_CUSTOMER_VERIFICATION_SUCCESS'\n      });\n    } catch (error) {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'error',\n        title: 'Disable Verified user unsuccessfully'\n      });\n      dispatch({\n        type: 'UPDATE_CUSTOMER_VERIFICATION_FAILED',\n        payload: error\n      });\n    }\n  }\n};\nexport const addUser = user => async dispatch => {\n  dispatch({\n    type: 'CUSTOMER_ADDED_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('http://localhost:8080/api/users/addcustomer', user);\n    console.log(response);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Customer addded successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/admin/customers');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'CUSTOMER_ADDED_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Customer added unsuccessfully'\n    });\n    dispatch({\n      type: 'CUSTOMER_ADDED_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","Swal","deleteCustomerAction","userId","dispatch","type","response","delete","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","setTimeout","window","location","reload","console","log","error","payload","updateCustomerName","updatecustomername","put","updateCustomerEmail","updatecustomeremail","updateCustomerPassword","updatecustomerpassword","updateCustomerVerification","updatecustomerverification","val","addUser","user","post"],"sources":["C:/Users/ASUS/Documents/GitHub/Distributed System/DistributedSystems/Instructor-learnerService/frontend/src/actions/CustomerAction.js"],"sourcesContent":["import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const deleteCustomerAction = (userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'CUSTOMER_DELETE_REQUEST' })\r\n\r\n\r\n    try {\r\n        const response = await axios.delete(`http://localhost:8080/api/users/delete/customer/${userId}`)\r\n\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Customer deleted successfully'\r\n        })\r\n\r\n        setTimeout(function () {\r\n            window.location.reload('/admin/customers');\r\n        }, 1500);\r\n\r\n\r\n\r\n        console.log(response);\r\n        dispatch({ type: 'DELETE_CUSTOMER_SUCCESS' })\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Unsuccessful Operation'\r\n        })\r\n\r\n\r\n        dispatch({ type: 'DELETE_OPERATION_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n//update function\r\n\r\nexport const updateCustomerName = (updatecustomername, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_NAME_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.put(`http://localhost:8080/api/users/update/customer/name/${userId}`, updatecustomername)\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Customer Username updated successfully'\r\n        })\r\n\r\n        setTimeout(function () {\r\n            window.location.reload('/admin/customers');\r\n        }, 1500);\r\n        console.log(response);\r\n\r\n        dispatch({ type: 'UPDATE_CUSTOMER_NAME_SUCCESS' })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Customer Name updated unsuccessfully'\r\n        })\r\n        dispatch({ type: 'UPDATE_CUSTOMER_NAME_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateCustomerEmail = (updatecustomeremail, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_CUSTOMER_EMAIL_REQUEST' })\r\n\r\n\r\n\r\n    try {\r\n        const response = await axios.put(`http://localhost:8080/api/users/update/customer/email/${userId}`, updatecustomeremail)\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Email updated successfully'\r\n        })\r\n        setTimeout(function () {\r\n            window.location.reload('/admin/customers');\r\n        }, 1500);\r\n\r\n        console.log(response);\r\n        dispatch({ type: 'UPDATE_CUSTOMER_EMAIL_SUCCESS' })\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Email updated unsuccessfully'\r\n        })\r\n\r\n        dispatch({ type: 'UPDATE_CUSTOMER_EMAIL_FAILED', payload: error })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const updateCustomerPassword = (updatecustomerpassword, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_CUSTOMER_PASSWORD_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.put(`http://localhost:8080/api/users/update/customer/password/${userId}`, updatecustomerpassword)\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Password updated successfully'\r\n        })\r\n        setTimeout(function () {\r\n            window.location.reload('/admin/customers');\r\n        }, 1500);\r\n\r\n        console.log(response);\r\n        dispatch({ type: 'UPDATE_CUSTOMER_PASSWORD_SUCCESS' })\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Password updated unsuccessfully'\r\n        })\r\n\r\n        dispatch({ type: 'UPDATE_CUSTOMER_PASSWORD_FAILED', payload: error })\r\n    }\r\n}\r\n\r\nexport const updateCustomerVerification = (updatecustomerverification, userId, val) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_CUSTOMER_VERIFICATION_REQUEST' })\r\n\r\n\r\n    if (val === true) {\r\n\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/api/users/update/customer/verification/${userId}`, updatecustomerverification)\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Enable Verified user successfully'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/customers');\r\n            }, 1500);\r\n           \r\n\r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_CUSTOMER_VERIFICATION_SUCCESS' })\r\n\r\n\r\n        } catch (error) {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Enable Verified user unsuccessfully'\r\n            })\r\n\r\n            dispatch({ type: 'UPDATE_CUSTOMER_VERIFICATION_FAILED', payload: error })\r\n        }\r\n\r\n\r\n    } else {\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/api/users/update/customer/verification/${userId}`, updatecustomerverification)\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Disable Verified user successfully'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/customers');\r\n            }, 1500);\r\n            \r\n\r\n\r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_CUSTOMER_VERIFICATION_SUCCESS' })\r\n\r\n\r\n        } catch (error) {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Disable Verified user unsuccessfully'\r\n            })\r\n\r\n            dispatch({ type: 'UPDATE_CUSTOMER_VERIFICATION_FAILED', payload: error })\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addUser = (user) => async dispatch => {\r\n\r\n    dispatch({ type: 'CUSTOMER_ADDED_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.post('http://localhost:8080/api/users/addcustomer', user)\r\n        console.log(response);\r\n\r\n        \r\n        \r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Customer addded successfully'\r\n        })\r\n       \r\n        setTimeout(function () {\r\n            window.location.reload('/admin/customers');\r\n        }, 1500);\r\n        console.log(response);\r\n        \r\n        dispatch({ type: 'CUSTOMER_ADDED_SUCCESS' })\r\n\r\n    } catch (error) {\r\n        \r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Customer added unsuccessfully'\r\n        })\r\n\r\n        dispatch({ type: 'CUSTOMER_ADDED_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}