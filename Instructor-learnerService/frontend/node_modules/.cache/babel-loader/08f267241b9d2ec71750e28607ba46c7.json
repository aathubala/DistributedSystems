{"ast":null,"code":"import axios from \"axios\";\nimport Swal from 'sweetalert2';\nexport const updateStatusAction = (updatestatus, salesid, val) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_TRASACTION_STATUS'\n  });\n\n  if (val === true) {\n    try {\n      const response = await axios.put(`http://localhost:8080/api/update/transactionstatus/${salesid}`, updatestatus);\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Enable status successfully'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/orders');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_TRANSACTION_STATUS_SUCCESS'\n      });\n    } catch (error) {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'error',\n        title: 'Enable status unsuccessfully'\n      });\n      dispatch({\n        type: 'UPDATE_TRANSACTION_STATUS_FAILED',\n        payload: error\n      });\n    }\n  } else {\n    try {\n      const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/orders/update/transactionstatus/${salesid}`, updatestatus);\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Disable transaction status successfully'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/orders');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_TRANSACTION_STATUS_SUCCESS'\n      });\n    } catch (error) {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'error',\n        title: 'Disable status unsuccessfully'\n      });\n      dispatch({\n        type: 'UPDATE_TRANSACTION_STATUS_FAILED',\n        payload: error\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Swal","updateStatusAction","updatestatus","salesid","val","dispatch","type","response","put","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","setTimeout","window","location","reload","console","log","error","payload"],"sources":["C:/Users/ASUS/Documents/GitHub/Distributed System/DistributedSystems/Instructor-learnerService/frontend/src/actions/refundRequestActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const updateStatusAction = (updatestatus, salesid, val) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_TRASACTION_STATUS' })\r\n\r\n\r\n    if (val === true) {\r\n\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:8080/api/update/transactionstatus/${salesid}`, updatestatus)\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Enable status successfully'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/orders');\r\n            }, 1500);\r\n           \r\n\r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_TRANSACTION_STATUS_SUCCESS' })\r\n\r\n\r\n        } catch (error) {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Enable status unsuccessfully'\r\n            })\r\n\r\n            dispatch({ type: 'UPDATE_TRANSACTION_STATUS_FAILED', payload: error })\r\n        }\r\n\r\n\r\n    } else {\r\n\r\n        try {\r\n            const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/orders/update/transactionstatus/${salesid}`, updatestatus)\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Disable transaction status successfully'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/orders');\r\n            }, 1500);\r\n            \r\n\r\n\r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_TRANSACTION_STATUS_SUCCESS' })\r\n\r\n\r\n        } catch (error) {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Disable status unsuccessfully'\r\n            })\r\n\r\n            dispatch({ type: 'UPDATE_TRANSACTION_STATUS_FAILED', payload: error })\r\n        }\r\n    }\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}