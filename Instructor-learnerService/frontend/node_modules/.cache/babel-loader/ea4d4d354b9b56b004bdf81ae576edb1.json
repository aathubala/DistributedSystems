{"ast":null,"code":"import axios from 'axios';\nimport Swal from \"sweetalert2\";\nexport const registerUser = user => async dispatch => {\n  dispatch({\n    type: 'USER_REGISTER_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('https://hungrymeals-backend.onrender.com/api/users/register', user);\n    console.log(response);\n    dispatch({\n      type: 'USER_REGISTER_SUCCESS'\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_REGISTER_FAILED',\n      payload: error\n    });\n  }\n}; //login action\n\nexport const loginUser = user => async dispatch => {\n  dispatch({\n    type: 'USER_LOGIN_REQUEST'\n  });\n\n  try {\n    const response = await axios.post('https://hungrymeals-backend.onrender.com/api/users/login', user);\n    console.log(response);\n    dispatch({\n      type: 'USER_LOGIN_SUCCESS',\n      payload: response.data\n    });\n    localStorage.setItem('currentUser', JSON.stringify(response.data));\n    window.location.href = '/';\n  } catch (error) {\n    dispatch({\n      type: 'USER_LOGIN_FAILED',\n      payload: error\n    });\n  }\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('currentUser');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('currentNotifications');\n  window.location.href = '/login';\n}; //update actions\n\nexport const updateUserName = (updatename, id) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_NAME_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/name/${id}`, updatename);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Username updated successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/profile');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'UPDATE_USER_NAME_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Email updated unsuccessfully'\n    });\n    dispatch({\n      type: 'UPDATE_USER_NAME_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateUserEmail = (updateemail, id) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_EMAIL_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/email/${id}`, updateemail);\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'success',\n      title: 'Email updated successfully'\n    });\n    setTimeout(function () {\n      window.location.reload('/profile');\n    }, 1500);\n    console.log(response);\n    dispatch({\n      type: 'UPDATE_USER_EMAIL_SUCCESS'\n    });\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 3000,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Email updated unsuccessfully'\n    });\n    dispatch({\n      type: 'UPDATE_USER_EMAIL_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateNotificationOneAction = (updateNotificationOne, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_NOTIFICATION_ONE_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationOne/${userId}`, updateNotificationOne);\n\n    if (updateNotificationOne.notificationOneHeader === 'empty') {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Deleted!'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'REMOVE_USER_NOTIFICATION_ONE_SUCCESS'\n      });\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification One updated successfully'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_USER_NOTIFICATION_ONE_SUCCESS'\n      });\n    }\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Operation failed'\n    });\n    dispatch({\n      type: 'NOTIFICATION_FOUR_OPERATION_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateNotificationTwoAction = (updateNotificationTwo, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_NOTIFICATION_TWO_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationTwo/${userId}`, updateNotificationTwo);\n\n    if (updateNotificationTwo.notificationTwoHeader === 'empty') {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Deleted!'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'REMOVE_USER_NOTIFICATION_TWO_SUCCESS'\n      });\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Two updated successfully'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_USER_NOTIFICATION_TWO_SUCCESS'\n      });\n    }\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Operation failed'\n    });\n    dispatch({\n      type: 'NOTIFICATION_TWO_OPERATION_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateNotificationThreeAction = (updateNotificationThree, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_NOTIFICATION_THREE_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationThree/${userId}`, updateNotificationThree);\n\n    if (updateNotificationThree.notificationThreeHeader === 'empty') {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Deleted!'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'REMOVE_USER_NOTIFICATION_THREE_SUCCESS'\n      });\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Deleted!'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_USER_NOTIFICATION_THREE_SUCCESS'\n      });\n    }\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Operation failed'\n    });\n    dispatch({\n      type: 'NOTIFICATION_THREE_OPERATION_FAILED',\n      payload: error\n    });\n  }\n};\nexport const updateNotificationFourAction = (updateNotificationFour, userId) => async dispatch => {\n  dispatch({\n    type: 'UPDATE_USER_NOTIFICATION_FOUR_REQUEST'\n  });\n\n  try {\n    const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationFour/${userId}`, updateNotificationFour);\n\n    if (updateNotificationFour.notificationFourHeader === 'empty') {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Deleted!'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'REMOVE_USER_NOTIFICATION_FOUR_SUCCESS'\n      });\n    } else {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 1500,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener('mouseenter', Swal.stopTimer);\n          toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: 'success',\n        title: 'Notification Deleted!'\n      });\n      setTimeout(function () {\n        window.location.reload('/admin/notifications');\n      }, 1500);\n      console.log(response);\n      dispatch({\n        type: 'UPDATE_USER_NOTIFICATION_FOUR_SUCCESS'\n      });\n    }\n  } catch (error) {\n    const Toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    });\n    Toast.fire({\n      icon: 'error',\n      title: 'Operation failed'\n    });\n    dispatch({\n      type: 'NOTIFICATION_FOUR_OPERATION_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["axios","Swal","registerUser","user","dispatch","type","response","post","console","log","error","payload","loginUser","data","localStorage","setItem","JSON","stringify","window","location","href","logoutUser","removeItem","updateUserName","updatename","id","put","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","setTimeout","reload","updateUserEmail","updateemail","updateNotificationOneAction","updateNotificationOne","userId","notificationOneHeader","updateNotificationTwoAction","updateNotificationTwo","notificationTwoHeader","updateNotificationThreeAction","updateNotificationThree","notificationThreeHeader","updateNotificationFourAction","updateNotificationFour","notificationFourHeader"],"sources":["C:/Users/ASUS/Documents/GitHub/Distributed System/DistributedSystems/Instructor-learnerService/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const registerUser = (user) => async dispatch => {\r\n\r\n    dispatch({ type: 'USER_REGISTER_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.post('https://hungrymeals-backend.onrender.com/api/users/register', user)\r\n        console.log(response);\r\n        dispatch({ type: 'USER_REGISTER_SUCCESS' })\r\n\r\n    } catch (error) {\r\n        dispatch({ type: 'USER_REGISTER_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n//login action\r\nexport const loginUser = (user) => async dispatch => {\r\n\r\n    dispatch({ type: 'USER_LOGIN_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.post('https://hungrymeals-backend.onrender.com/api/users/login', user)\r\n        console.log(response);\r\n        dispatch({ type: 'USER_LOGIN_SUCCESS', payload: response.data })\r\n        localStorage.setItem('currentUser', JSON.stringify(response.data))\r\n        window.location.href = '/'\r\n\r\n    } catch (error) {\r\n        dispatch({ type: 'USER_LOGIN_FAILED', payload: error })\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n\r\n    localStorage.removeItem('currentUser')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('currentNotifications')\r\n    window.location.href = '/login'\r\n}\r\n\r\n\r\n//update actions\r\n\r\nexport const updateUserName = (updatename, id) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_NAME_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/name/${id}`, updatename)\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Username updated successfully'\r\n        })\r\n       \r\n        setTimeout(function () {\r\n            window.location.reload('/profile');\r\n        }, 1500);\r\n        console.log(response);\r\n        \r\n        dispatch({ type: 'UPDATE_USER_NAME_SUCCESS' })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Email updated unsuccessfully'\r\n        })\r\n        dispatch({ type: 'UPDATE_USER_NAME_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserEmail = (updateemail, id) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_EMAIL_REQUEST' })\r\n\r\n    try {\r\n        const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/email/${id}`, updateemail)\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: 'Email updated successfully'\r\n        })\r\n        setTimeout(function () {\r\n            window.location.reload('/profile');\r\n        }, 1500);\r\n\r\n        console.log(response);\r\n        dispatch({ type: 'UPDATE_USER_EMAIL_SUCCESS' })\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Email updated unsuccessfully'\r\n        })\r\n\r\n        dispatch({ type: 'UPDATE_USER_EMAIL_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateNotificationOneAction = (updateNotificationOne, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_NOTIFICATION_ONE_REQUEST' })\r\n    \r\n\r\n    try {\r\n       \r\n        const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationOne/${userId}`, updateNotificationOne)\r\n       \r\n        if (updateNotificationOne.notificationOneHeader === 'empty') {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Deleted!'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'REMOVE_USER_NOTIFICATION_ONE_SUCCESS' })\r\n        }else{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification One updated successfully'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_USER_NOTIFICATION_ONE_SUCCESS' })\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Operation failed'\r\n        })\r\n\r\n        dispatch({ type: 'NOTIFICATION_FOUR_OPERATION_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const updateNotificationTwoAction = (updateNotificationTwo, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_NOTIFICATION_TWO_REQUEST' })\r\n    \r\n\r\n    try {\r\n        const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationTwo/${userId}`, updateNotificationTwo)\r\n\r\n        if (updateNotificationTwo.notificationTwoHeader === 'empty') {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Deleted!'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'REMOVE_USER_NOTIFICATION_TWO_SUCCESS' })\r\n        }else{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Two updated successfully'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_USER_NOTIFICATION_TWO_SUCCESS' })\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Operation failed'\r\n        })\r\n\r\n        dispatch({ type: 'NOTIFICATION_TWO_OPERATION_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateNotificationThreeAction = (updateNotificationThree, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_NOTIFICATION_THREE_REQUEST' })\r\n    \r\n\r\n    try {\r\n        const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationThree/${userId}`, updateNotificationThree)\r\n\r\n        if (updateNotificationThree.notificationThreeHeader === 'empty') {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Deleted!'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'REMOVE_USER_NOTIFICATION_THREE_SUCCESS' })\r\n        }else{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Deleted!'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_USER_NOTIFICATION_THREE_SUCCESS' })\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Operation failed'\r\n        })\r\n\r\n        dispatch({ type: 'NOTIFICATION_THREE_OPERATION_FAILED', payload: error })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateNotificationFourAction = (updateNotificationFour, userId) => async dispatch => {\r\n\r\n    dispatch({ type: 'UPDATE_USER_NOTIFICATION_FOUR_REQUEST' })\r\n    \r\n\r\n    try {\r\n        const response = await axios.put(`https://hungrymeals-backend.onrender.com/api/users/update/notificationFour/${userId}`, updateNotificationFour)\r\n\r\n        if (updateNotificationFour.notificationFourHeader === 'empty') {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Deleted!'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'REMOVE_USER_NOTIFICATION_FOUR_SUCCESS' })\r\n        }else{\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                    toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                    toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                }\r\n            })\r\n    \r\n            Toast.fire({\r\n                icon: 'success',\r\n                title: 'Notification Deleted!'\r\n            })\r\n            setTimeout(function () {\r\n                window.location.reload('/admin/notifications');\r\n            }, 1500);\r\n    \r\n            console.log(response);\r\n            dispatch({ type: 'UPDATE_USER_NOTIFICATION_FOUR_SUCCESS' })\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        const Toast = Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n                toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        })\r\n\r\n        Toast.fire({\r\n            icon: 'error',\r\n            title: 'Operation failed'\r\n        })\r\n\r\n        dispatch({ type: 'NOTIFICATION_FOUR_OPERATION_FAILED', payload: error })\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}